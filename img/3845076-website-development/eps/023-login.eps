%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Tue Dec  1 13:43:07 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 6 18 378 360
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 6 18 378 360
%%EndPageSetup
q 6 18 372 342 rectclip
1 0 0 -1 0 384 cm q
q
372 318 m 348 318 l 348 123 l 347.988 111.406 338.594 102.012 327 102 c
 306 102 l 306 30 l 306 26.688 303.312 24 300 24 c 84 24 l 80.688 24 78 
26.688 78 30 c 78 102 l 57 102 l 45.406 102.012 36.012 111.406 36 123 c 
36 318 l 12 318 l 8.688 318 6 320.688 6 324 c 6 345 l 6.012 356.594 15.406
 365.988 27 366 c 357 366 l 368.594 365.988 377.988 356.594 378 345 c 378
 324 l 378 320.688 375.312 318 372 318 c h
306 132 m 318 132 l 318 300 l 306 300 l h
90 36 m 294 36 l 294 300 l 90 300 l h
48 123 m 48.004 118.031 52.031 114.004 57 114 c 78 114 l 78 120 l 60 120
 l 56.688 120 54 122.688 54 126 c 54 306 l 54 309.312 56.688 312 60 312 
c 324 312 l 327.312 312 330 309.312 330 306 c 330 126 l 330 122.688 327.312
 120 324 120 c 306 120 l 306 114 l 327 114 l 331.969 114.004 335.996 118.031
 336 123 c 336 318 l 48 318 l h
78 132 m 78 300 l 66 300 l 66 132 l h
216 330 m 216 336 l 168 336 l 168 330 l h
366 345 m 365.996 349.969 361.969 353.996 357 354 c 27 354 l 22.031 353.996
 18.004 349.969 18 345 c 18 330 l 156 330 l 156 342 l 156 345.312 158.688
 348 162 348 c 222 348 l 225.312 348 228 345.312 228 342 c 228 330 l 366
 330 l h
366 345 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 30.667 527.465027 527.052979 31.079 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
66 336 m 30 336 l 26.688 336 24 338.688 24 342 c 24 345.312 26.688 348 
30 348 c 66 348 l 69.312 348 72 345.312 72 342 c 72 338.688 69.312 336 66
 336 c h
66 336 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 11.601 508.398987 507.987 12.013 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
90 336 m 84 336 l 80.688 336 78 338.688 78 342 c 78 345.312 80.688 348 
84 348 c 90 348 l 93.312 348 96 345.312 96 342 c 96 338.688 93.312 336 90
 336 c h
90 336 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 37.601002 534.398987 533.987 38.013 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
151.938 166.414 m 152.23 166.68 152.547 166.918 152.883 167.125 c 176.141
 184.297 207.879 184.293 231.133 167.113 c 231.457 166.914 231.758 166.688
 232.039 166.43 c 254.539 149.262 263.586 119.652 254.527 92.84 c 245.469
 66.023 220.32 47.969 192.016 47.961 c 163.711 47.957 138.551 66 129.48 
92.809 c 120.41 119.621 129.445 149.23 151.938 166.414 c h
162.152 158.973 m 163.32 147.449 171.023 137.625 181.934 133.738 c 192.848
 129.852 205.023 132.598 213.215 140.789 c 218.117 145.664 221.172 152.094
 221.852 158.973 c 203.77 171.008 180.23 171.008 162.152 158.973 c h
192 114 m 187.145 114 182.77 111.078 180.914 106.594 c 179.055 102.109 
180.082 96.945 183.516 93.516 c 186.945 90.082 192.109 89.055 196.594 90.914
 c 201.078 92.77 204 97.145 204 102 c 203.992 108.625 198.625 113.992 192
 114 c h
192 60 m 213.289 59.984 232.598 72.488 241.293 91.922 c 249.988 111.355
 246.445 134.082 232.25 149.949 c 228.289 136.789 218.16 126.391 205.109
 122.09 c 214.008 116.285 218.031 105.324 215.004 95.141 c 211.977 84.961
 202.613 77.98 191.988 77.984 c 181.367 77.988 172.012 84.977 168.988 95.164
 c 165.969 105.348 170.004 116.305 178.91 122.102 c 165.863 126.41 155.734
 136.809 151.766 149.969 c 137.559 134.105 134.008 111.371 142.703 91.934
 c 151.395 72.496 170.707 59.984 192 60 c h
192 60 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ -44.401001 452.397003 451.984985 -43.988998 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
132 228 m 252 228 l 255.312 228 258 225.312 258 222 c 258 198 l 258 194.688
 255.312 192 252 192 c 132 192 l 128.688 192 126 194.688 126 198 c 126 222
 l 126 225.312 128.688 228 132 228 c h
138 204 m 246 204 l 246 216 l 138 216 l h
138 204 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 19.601 516.398987 515.987 20.013 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
174 240 m 170.688 240 168 242.688 168 246 c 168 249.312 170.688 252 174
 252 c 210 252 l 213.312 252 216 249.312 216 246 c 216 242.688 213.312 240
 210 240 c h
174 240 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 43.601002 540.398987 539.987 44.013 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
132 270 m 252 270 l 255.312 270 258 267.312 258 264 c 258 260.688 255.312
 258 252 258 c 132 258 l 128.688 258 126 260.688 126 264 c 126 267.312 128.688
 270 132 270 c h
132 270 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 55.601002 552.398987 551.987 56.013 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
228 276 m 156 276 l 152.688 276 150 278.688 150 282 c 150 285.312 152.688
 288 156 288 c 228 288 l 231.312 288 234 285.312 234 282 c 234 278.688 231.312
 276 228 276 c h
228 276 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 67.600998 564.398987 563.987 68.013 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
