%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Tue Dec  1 13:43:06 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 6 6 378 378
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 6 6 378 378
%%EndPageSetup
q 6 6 372 372 rectclip
1 0 0 -1 0 384 cm q
q
372 54 m 375.312 54 378 51.312 378 48 c 378 12 l 378 8.688 375.312 6 372
 6 c 336 6 l 332.688 6 330 8.688 330 12 c 330 24 l 54 24 l 54 12 l 54 8.688
 51.312 6 48 6 c 12 6 l 8.688 6 6 8.688 6 12 c 6 48 l 6 51.312 8.688 54 
12 54 c 24 54 l 24 330 l 12 330 l 8.688 330 6 332.688 6 336 c 6 372 l 6 
375.312 8.688 378 12 378 c 48 378 l 51.312 378 54 375.312 54 372 c 54 360
 l 330 360 l 330 372 l 330 375.312 332.688 378 336 378 c 372 378 l 375.312
 378 378 375.312 378 372 c 378 336 l 378 332.688 375.312 330 372 330 c 360
 330 l 360 54 l h
18 42 m 18 18 l 42 18 l 42 42 l h
42 366 m 18 366 l 18 342 l 42 342 l h
330 336 m 330 348 l 54 348 l 54 336 l 54 332.688 51.312 330 48 330 c 36
 330 l 36 54 l 48 54 l 51.312 54 54 51.312 54 48 c 54 36 l 330 36 l 330 
48 l 330 51.312 332.688 54 336 54 c 348 54 l 348 330 l 336 330 l 332.688
 330 330 332.688 330 336 c h
366 342 m 366 366 l 342 366 l 342 342 l h
342 42 m 342 18 l 366 18 l 366 42 l h
342 42 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 13.122 498.877991 520.174011 -8.174 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
180 60 m 66 60 l 62.688 60 60 62.688 60 66 c 60 126 l 60 129.312 62.688
 132 66 132 c 180 132 l 183.312 132 186 129.312 186 126 c 186 66 l 186 62.688
 183.312 60 180 60 c h
174 120 m 72 120 l 72 72 l 174 72 l h
174 120 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ -96.877998 388.877991 410.174011 -118.174004 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
180 144 m 66 144 l 62.688 144 60 146.688 60 150 c 60 318 l 60 321.312 62.688
 324 66 324 c 180 324 l 183.312 324 186 321.312 186 318 c 186 150 l 186 
146.688 183.312 144 180 144 c h
174 312 m 72 312 l 72 156 l 174 156 l h
174 312 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ -4.878 480.877991 502.174011 -26.174 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
318 60 m 204 60 l 200.688 60 198 62.688 198 66 c 198 318 l 198 321.312 
200.688 324 204 324 c 318 324 l 321.312 324 324 321.312 324 318 c 324 66
 l 324 62.688 321.312 60 318 60 c h
312 312 m 210 312 l 210 72 l 312 72 l h
312 312 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.247059 0.541176 ]
      /C1 [ 0 0.843137 0.87451 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0 0.843137 0.87451 ]
      /C1 [ 0 0.427451 0.941176 ]
      /N 1
   >>
   ]
   /Bounds [ 0.518 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 59.122002 544.877991 566.174011 37.826 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
